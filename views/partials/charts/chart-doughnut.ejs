<script type="text/javascript">
    const reverseSortKeyValue = (keys, values) => {
        const argrsort = a=>a.map(d).sort((a,b)=>b[0]-a[0]).map(u);d=(v,i)=>[v,i];u=i=>i[1];  // get indices of reverse sort, based on https://stackoverflow.com/questions/46622486/what-is-the-javascript-equivalent-of-numpy-argsort
        const rsindices = argrsort(values);
        const skeys = rsindices.map(i=>keys[i]);
        const svalues = rsindices.map(i=>values[i]);
        return [skeys, svalues];
    };

    var canvases = document.querySelectorAll('[data-chart-doughnut]');
    canvases.forEach(canvas => {
        const lines = canvas.getAttribute('data-chart-doughnut').split(',');
        const data = canvas.getAttribute('data-chart-doughnut-data').split(',').map(n=>+n);
        const labels = canvas.getAttribute('data-chart-doughnut-labels').split(',');
        const [slabels, sdata] = reverseSortKeyValue(labels, data);
        console.log(slabels);
        console.log(sdata);

        const backgroundColor = Array(data.length).fill('rgba(54, 162, 235, 0.4)');
        const borderColor = Array(data.length).fill('rgba(54, 162, 235, 1)');
        var ctx = canvas.getContext('2d');
        var chart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: slabels,
                datasets: [{
                    data: sdata,
                    backgroundColor,
                    borderWidth: 1,
                }],
            },
            options: {
                aspectRatio: 1,
                cutoutPercentage: 85,
                title: { display: false },
                legend: { display: false },
                centerText: {
                    display: true,
                    lines,
                },
                tooltips: { enabled: true },
            },
        })
    });

    Chart.pluginService.register({
        beforeDraw: function (chart) {
            const lines = chart.options.centerText.lines;
            if (!chart.options.centerText.display || !lines.length) {
                return;
            }

            const height = chart.chart.height;
            const fontSize = (height / 200).toFixed(2);
            
            var ctx = chart.chart.ctx;
            ctx.font = fontSize + "em arial";
            ctx.textAlign = 'center';
            ctx.textBaseline = "middle";
            
            const lineHeight = 25;
            const centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);
            var centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);
            centerY -= (lines.length - 1) * lineHeight / 2;
            lines.forEach(line => {
                ctx.fillText(line, centerX, centerY);
                centerY += lineHeight;
            });
        }
    });
</script>