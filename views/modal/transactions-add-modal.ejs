<!-- requires 'kind' -->
<% if (asset) { %>
    <% const kind = asset.kind; %>
    <% const kindurl = kind.toLowerCase() + 's'; %>
    
<div id="transactions-add-modal" class="modal">
    <div class="modal-header">
        <div class="title">Add <%- kind %> Transaction</div>
        <button data-modal-close-button class="close-button">&times;</button>
    </div>
    <div class="modal-content">
        <form id="transactions-add-form" class="modal-form" autocomplete="off">

            <!-- select the transaction type -->
            <label for="kind">Transaction Type</label>
            <select name="kind" id="kind" autofocus>
                <option value="buy">Buy</option>
                <option value="sell">Sell</option>
                <option value="split">Split</option>
                <option value="dividend">Dividend</option>
                <option value="units">Shares (as dividend)</option>
            </select>
            <div class="kind error"></div>

            <!-- date -->
            <label for="date">Date</label>
            <input type="date" name="date" id="date" required>
            <div class="date error"></div>

            <!-- buy / sell -->
            <div id="entry-buy-sell-div">
                <!-- quantity -->
                <label for="quantity">Shares</label>
                <input type="number" name="quantity" id="quantity" min="0" placeholder="Number of Shares" step="any">
                <div class="quantity error"></div>
                
                <!-- price -->
                <label for="price">Price</label>
                <input type="number" name="price" id="price" min="0" placeholder="Price per Share" step="any">
                <div class="price error"></div>

                <!-- commission -->
                <label for="commission">Commissions</label>
                <input type="number" name="commission" id="commission" value="0" min="0" placeholder="Commission for the Transaction" step="any">
                <div class="commission error"></div>                
            </div>

            <!-- split -->
            <div id="entry-split-div">
                <!-- split ratio -->
                <p>
                    A 3-for-1 split will multiply shares owned by 3 and divide cost paid per share by 3.<br/>
                    A 1-for-3 reverse split will divide shares owned by 3 and multiply cost paid per share by 3.
                </p>
                <label for="splitbefore">Split Ratio</label>
                <input type="number" name="splitbefore" id="splitbefore" min="1">
                <div class="splitbefore error"></div>
                <label for="splitafter">For</label>
                <input type="number" name="splitafter" id="splitafter" min="1">
                <div class="splitafter error"></div>
            </div>
            
            <!-- dividend -->
            <div id="entry-dividend-div">
                <!-- dividend -->
                <label for="dividend">Amount</label>
                <input type="number" name="dividend" id="dividend" min="0" step="any">
                <div class="dividend error"></div>
            </div>

            <!-- shares as dividend -->
            <div id="entry-shares-as-dividend-div">
                <!-- quantity -->
                <label for="sadquantity">Shares</label>
                <input type="number" name="sadquantity" id="sadquantity" min="0" placeholder="Number of Shares" step="any">
                <div class="sadquantity error"></div>
                
                <!-- commission -->
                <label for="sadcommission">Commissions</label>
                <input type="number" name="sadcommission" id="sadcommission" value="0" min="0" placeholder="Commission for the Transaction" step="any">
                <div class="sadcommission error"></div>                
            </div>
            
            <!-- notes -->
            <label for="notes">Notes</label>
            <input type="text" name="notes" id="notes" placeholder="Transaction Notes" maxlength="128">
            
            <div class="mini-nav">
                <ul>
                    <li><button title="Add transaction">Add</button></li>
                </ul>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
$("#kind").change(function () {
    if ($(this).val() === "buy" || $(this).val() === "sell") {
        $('#entry-buy-sell-div').show();
        $('#quantity').attr('required', '');
        $('#price').attr('required', '');
    } else {
        $('#entry-buy-sell-div').hide();
        $('#quantity').removeAttr('required', '');
        $('#price').removeAttr('required', '');
    }
    if ($(this).val() === "split") {
        $('#entry-split-div').show();
        $('#splitbefore').attr('required', '');
        $('#splitafter').attr('required', '');
    } else {
        $('#entry-split-div').hide();
        $('#splitbefore').removeAttr('required', '');
        $('#splitafter').removeAttr('required', '');
    }
    if ($(this).val() === "dividend") {
        $('#entry-dividend-div').show();
        $('#dividend').attr('required', '');
    } else {
        $('#entry-dividend-div').hide();
        $('#dividend').removeAttr('required', '');
    }
    if ($(this).val() === "units") {
        $('#entry-shares-as-dividend-div').show();
        $('#sadquantity').attr('required', '');
    } else {
        $('#entry-shares-as-dividend-div').hide();
        $('#sadquantity').removeAttr('required', '');
    }
});
$("#kind").trigger("change");
</script>
    
<script type="text/javascript">
    var transactionsAddModal = document.getElementById("transactions-add-modal");
    var transactionsAddForm = document.getElementById("transactions-add-form");
    transactionsAddForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        // get elements
        const kindError = document.querySelector('#transactions-add-form .kind.error');
        const dateError = document.querySelector('#transactions-add-form .date.error');
        const quantityError = document.querySelector('#transactions-add-form .quantity.error');
        const priceError = document.querySelector('#transactions-add-form .price.error');
        const commissionError = document.querySelector('#transactions-add-form .commission.error');
        const splitbeforeError = document.querySelector('#transactions-add-form .splitbefore.error');
        const splitafterError = document.querySelector('#transactions-add-form .splitafter.error');
        const dividendError = document.querySelector('#transactions-add-form .dividend.error');
        const sadQuantityError = document.querySelector('#transactions-add-form .sadquantity.error');
        const sadCommissionError = document.querySelector('#transactions-add-form .sadcommission.error');
        
        // reset errors
        kindError.textContent = '';
        dateError.textContent = '';
        quantityError.textContent = '';
        priceError.textContent = '';
        commissionError.textContent = '';
        splitbeforeError.textContent = '';
        splitafterError.textContent = '';
        dividendError.textContent = '';
        sadQuantityError.textContent = '';
        sadCommissionError.textContent = '';
        
        // get values
        const kind = transactionsAddForm.kind.value;
        const date = transactionsAddForm.date.value;
        const quantity = transactionsAddForm.quantity.value;
        const price = transactionsAddForm.price.value;
        const commission = transactionsAddForm.commission.value;
        const splitbefore = transactionsAddForm.splitbefore.value;
        const splitafter = transactionsAddForm.splitafter.value;
        const dividend = transactionsAddForm.dividend.value;
        const sadquantity = transactionsAddForm.sadquantity.value;
        const sadcommission = transactionsAddForm.sadcommission.value;
        const notes = transactionsAddForm.notes.value;
        
        try {
            const body = JSON.stringify({ kind, date, quantity, price, commission, splitbefore, splitafter, dividend, sadquantity, sadcommission, notes });
            const res = await fetch('/assets/<%- kindurl %>/<%- asset._id %>/create', { method: 'POST', body, headers: { 'Content-Type': 'application/json' } });
            const data = await res.json();
            console.log(data);
            if (data.errors) {
                kindError.textContent = data.errors.kind;
                dateError.textContent = data.errors.date;
                quantityError.textContent = data.errors.quantity;
                priceError.textContent = data.errors.price;
                commissionError.textContent = data.errors.commission;
                splitbeforeError.textContent = data.errors.splitbefore;
                splitafterError.textContent = data.errors.splitafter;
                dividendError.textContent = data.errors.dividend;
                sadQuantityError.textContent = data.errors.sadquantity;
                sadCommissionError.textContent = data.errors.sadcommission;
            }
            if (data.transaction) {
                closeModal(transactionsAddModal);
                location.assign('/assets/<%- kindurl %>/<%- asset._id %>');
            }
        }
        catch (err) {
            console.log(err);
        }
    });
</script>
<% } %>